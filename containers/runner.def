bootstrap: docker
From: nvidia/cuda:11.8.0-base-ubuntu22.04
Stage: build

%help
    Build production container:
    $ sudo singularity build <name>.sif <name>.def

    Add a 1 GiB writable overlay partition to an existing SIF image:
    $ singularity overlay create --size 1024 <name>.sif

    Shell into singularity container:
    $ singularity shell --contain --writable <name>.sif

        --contain
            Do not automatically bind volumes to container.
        --writable
            This option makes the file system accessible as read/write.

    Binding to a volume:
    $ singularity shell --bind host_mnt:container_mnt <name>.sif

%setup

%files

%environment
    #=======================================================================
    # Common Settings
    #=======================================================================
    # Ref 1: https://unix.stackexchange.com/questions/87745/what-does-lc-all-c-do
    # Ref 2: https://unix.stackexchange.com/questions/168340/where-is-ld-library-path-how-do-i-set-the-ld-library-path-env-variable
    export HOME="/domi"
    export LISTEN_PORT=12345
    export LC_ALL=C
    export PATH=/root/.local/bin:/usr/local/bin:/usr/local/sbin:$PATH
    export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:$LD_LIBRARY_PATH
    export SINGULARITY_SHELL=/bin/bash

    #=======================================================================
    # Frontend
    #=======================================================================
    # Perform installation without requiring interactive user input.
    # Ref 1: https://askubuntu.com/questions/972516/debian-frontend-environment-variable
    export DEBIAN_FRONTEND=noninterative

%post
    #=======================================================================
    # Packages/Applications
    #=======================================================================
    apt-get update
    apt-get install -y curl gcc git g++ make htop netcat neofetch nvtop openssl tree vim wget zsh
    apt-get clean

    #=======================================================================
    # Setup directories
    #=======================================================================
    # needed for writable containers
    mkdir -p /domi
    mkdir -p /dev

    #=======================================================================
    # Shell Preferences
    #=======================================================================
    export HOME="/domi"
    export OSH="${HOME}/.oh-my-bash"; bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"

    #=======================================================================
    # Vim Preferences
    #=======================================================================
    git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
    sh ~/.vim_runtime/install_awesome_vimrc.sh
    
    #=======================================================================
    # Installing Github CLI
    #=======================================================================
    type -p curl >/dev/null || (apt update && apt install curl -y)
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && apt update \
    && apt install gh -y

    apt update
    apt install gh

    #=======================================================================
    # File Permissions
    #=======================================================================
    # Make all files accessible
    chmod --recursive 777 /opt
    chmod --recursive 777 $HOME

    #=======================================================================
    # Configure Login Shell
    #=======================================================================
    echo 'cd $HOME' >> ~/.bashrc
    echo 'neofetch' >> ~/.bashrc

%runscript
    echo "Arguments received: $*"
    exec echo "$@"

%startscript
    export LC_ALL=C.UTF-8 # Sets locale to UTF-8
    export LANG=C.UTF-8 # Sets locale to UTF-8
    nc -lp $LISTEN_PORT
    $HOME/singularity/actions-runner/run.sh

%test

%labels
    Version: v1.0.0
    Date:    11-01-2023
