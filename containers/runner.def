bootstrap: localimage
From: base.sif
Stage: build

%help
    # Description
    You need three things in order to create a Git runner:
        * Github Hostname
        * Github Organization
        * Github Personal Access Token

    # Create Github Personal Token
    In order to create a Git runner you need to create a classic **Github token** via:

    * Settings > Developer Settings > Personal Access Tokens > Tokens (classic)

    A Github personal token is an identifier that lets Github Actions know who you are.  Think of it as a userId.  Make sure you allow all permissions.

    # Setting the environment
    Then set these in the `gh.config` file:
    export GH_HOSTNAME=<hostname>                       # example: my-host.com
    export GH_ORG=<Github organization>                 # example: my-org

    # Setting your Github personal access token
    Set this in your `gh.secret` file:
    <ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX>

    # Building the containers
    Build the container:

    $ cd containers
    $ singularity build base.sif base.def
    $ singularity build runner.sif runner.def

    # Run a test
    Finally test the runner:

    $ singularity run \
        --userns \
        --writable \
        --app test \
        runner.sif

%environment
    . $HOME/gh.config

%files
    # Copy over Github configuration and secret
    ./gh.config /domi/gh.config
    ./gh.secret /domi/gh.secret

%post
    cd $HOME

    # Install American dictionary
    apt-get update
    apt-get install -y gh wamerican
    apt-get clean

    # Source the needed variables
    . $HOME/gh.config

    # Create a folder
    mkdir actions-runner && cd actions-runner

    # Download and install Linux Git actions-runner
    curl -O -L https://github.com/actions/runner/releases/download/v2.319.1/actions-runner-linux-x64-2.319.1.tar.gz
    tar xzf ./actions-runner-linux-x64-2.319.1.tar.gz

    # Github authentication login
    # https://cli.github.com/manual/gh_api
    gh auth login --hostname $GH_HOSTNAME --with-token < $HOME/gh.secret
    rm $HOME/gh.secret

%apprun start_runner

    # Create a unique Github Runner token
    GH_RUNNER_TOKEN=$(gh api \
        --method POST \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        --hostname "$GH_HOSTNAME" \
        /orgs/"$GH_ORG"/actions/runners/registration-token \
        | jq .token --raw-output)

    # Set variables
    export NAME1=$(shuf -n1 /usr/share/dict/words)
    export NAME2=$(shuf -n1 /usr/share/dict/words)
    export GH_RUNNER_NAME="${NAME1}-${NAME2}"
    export GH_RUNNER_TOKEN="$GH_RUNNER_TOKEN"

    # Display configuration
    echo " ------------------------- Start Runner ------------------------- "
    echo "Arguments received: $*"
    echo "Hostname (w/o https)  = $GH_HOSTNAME"
    echo "Github Organization   = $GH_ORG"
    echo "Github Runner Name    = $GH_RUNNER_NAME"
    echo "Github Runner Token   = $GH_RUNNER_TOKEN"

    # Configure Runner
    cd $HOME/actions-runner
    ./config.sh \
        --url "https://$GH_HOSTNAME/$GH_ORG" \
        --unattended \
        --token $GH_RUNNER_TOKEN \
        --name $GH_RUNNER_NAME

    nohup ./run.sh > output.txt &

%apprun stop_runner
    echo " ------------------------- Stop Runner ------------------------- "

    GH_REMOVE_TOKEN=$(gh api \
        --method POST \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        /orgs/$GH_ORG/actions/runners/remove-token \
        | jq .token --raw-output)

    # Remove Runner
    cd $HOME/actions-runner
    ./config.sh remove --token $GH_REMOVE_TOKEN

%apprun test

    # Create a unique Github Runner token
    GH_RUNNER_TOKEN=$(gh api \
        --method POST \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        --hostname $GH_HOSTNAME \
        /orgs/$GH_ORG/actions/runners/registration-token \
        | jq .token --raw-output)

    # Set variables
    export NAME1=$(shuf -n1 /usr/share/dict/words)
    export NAME2=$(shuf -n1 /usr/share/dict/words)
    export GH_RUNNER_NAME="${NAME1}-${NAME2}"
    export GH_RUNNER_TOKEN="$GH_RUNNER_TOKEN"

    # Display configuration
    echo " ----------------------- Testing Runner ----------------------- "
    echo "Arguments received: $*"
    echo "Hostname (w/o https)  = $GH_HOSTNAME"
    echo "Github Organization   = $GH_ORG"
    echo "Github Runner Name    = $GH_RUNNER_NAME"
    echo "Github Runner Token   = $GH_RUNNER_TOKEN"

    # Configure Runner
    echo " ----------------------- Starting Runner ----------------------- "
    cd $HOME/actions-runner
    ./config.sh \
        --url "https://$GH_HOSTNAME/$GH_ORG" \
        --unattended \
        --token $GH_RUNNER_TOKEN \
        --name $GH_RUNNER_NAME

    # Remove Runner
    echo " ----------------------- Removing Runner ----------------------- "
    GH_REMOVE_TOKEN=$(gh api \
        --method POST \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        /orgs/$GH_ORG/actions/runners/remove-token \
        | jq .token --raw-output)

    ./config.sh remove --token $GH_REMOVE_TOKEN
